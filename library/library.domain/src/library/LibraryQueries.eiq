package library

import "library"

// TODO:
// viewers
// validation

// ***** relationships ********

pattern averageNumberOfCoauthorsPerBook(W : Writer, A) {
	NumOfBooks == count find writerOfBook(_B, W);
	NumOfCoAuthors == count find coAuthorsOfWriter(W, _CW);
	A == eval(if (NumOfBooks == 0) 0 else NumOfCoAuthors.doubleValue / NumOfBooks.doubleValue);
}

pattern coAuthorsOfWriter(W : Writer, CW : Writer) {
	Book(B);
	Writer.books(W, B);
	Writer.books(CW, B);
	W != CW;
}

pattern writerName(W : Writer, N) {
	Writer.firstName(W, FN);
	Writer.lastName(W, LN);
	N == eval(FN + " " + LN);
}

/*
 * There are more books with category C1 than books with category C2. 
 */
pattern moreBooksInCategoryThan(C1 : BookCategory, C2 : BookCategory) {
	N == count find categoryOfBook(C1, _B1);
	M == count find categoryOfBook(C2, _B2);
	check(N > M);
} 

/*
 * Category C has the most books in the Library L.
 */

pattern mostPopularBookCategory(L : Library, C : BookCategory) = {
	Library(L);
	neg find moreBooksInCategoryThan(_Cx, C);
} 

pattern categoryOfBook(c : BookCategory, b : Book) {
	Book.bookCategory(b, c);
}

pattern isValidWriter(w : Writer, b) {
	find numberOfBooksOfWriter(w, n);
	b == eval(n > 0);
}

/*
 * The "own" books of writer, i.e. the ones that have only w as the author.
 */
pattern ownBooksOfWriter(W : Writer, B : Book) {
	Writer.books(W, B);
	find numberOfWriters(B, 1);
} 

/*
 * All of the (transitive) citations of Book b1 contain Book b2.
 */
pattern allBookCitations(b1 : Book, b2 : Book) {
	find bookCitation+(b1, b2);
}

/*
 * Book ref is contained in the set of books that (transitively) reference Book b. 
 */
@Edge(source = b, target = ref, label = "ref+")
@Format(lineStyle = "dashed")
pattern allReferencesTo(b: Book, ref: Book){
	find bookCitation+(ref,b);
}

@Edge(source = b1, target = b2, label = "cites")
pattern bookCitation(b1 : Book, b2 : Book) {
	Book.citations(b1, b2);
}

/*
 * Writer w1 is influenced by w2, since he wrote some book
 * that (indirectly or directly) references one of w2's works.
 */
@Edge(source = w1, target = w2, label = "influencedBy")
@Format(lineColor = "#ff0000")
pattern influencedBy(w1: Writer, w2: Writer) {
	Book.writers(b1,w1);
	Book.writers(b2,w2);
	find allReferencesTo(b2,b1);
}


// ************* numbers **********

/*
 * The number of (transitive) citations of Book B1 is N.
 */
pattern numberOfCitations(B1 : Book, N) {
	N == count find allBookCitations(B1, _B2);
}

/*
 * The number of the books of Writer W is N.  
 */
pattern numberOfBooksOfWriter(W : Writer, N) {
	N == count find bookOfWriter(W, _B);
}

//@Item(item = B, label = "$B.title$ [$N2$]")
// TODO: this seems to introduce a weird bug
pattern numberOfWriters(B : Book, N) {
	N == count find writerOfBook(B, _W);
}

pattern writerOfBook(B : Book, W : Writer) {
	Book.writers(B, W);
}

@Edge(source = w, target = b, label = "author")
@QueryExplorer(display = true)
pattern bookOfWriter(w : Writer, b : Book) {
	Writer.books(w, b);
}