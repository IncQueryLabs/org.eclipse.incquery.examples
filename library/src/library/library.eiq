package library

import "http://eclipse.org/incquery/xcore/library"
//import "library"

// TODO:
// pattern calls + neg
// transitive closure
// check, eval

// viewers
// validation


// ***** relationships ********


/*
 * The "own" books of writer, i.e. the ones that have only w as the author.
 */
pattern ownBooksOfWriter(w : Writer, b : Book) {
	Writer.books(w, b);
	find numberOfWriters(b, 1);
} 

/*
 * All of the (transitive) citations of Book b1 contain Book b2.
 */
pattern allBookCitations(b1 : Book, b2 : Book) {
	find bookCitation+(b1, b2);
}


/*
 * Book ref is contained in the set of books that (transitively) reference Book b. 
 */
@Edge(source = b, target = ref, label = "ref+")
@Format(lineStyle = "dashed")
pattern allReferencesTo(b: Book, ref: Book){
	find bookCitation+(ref,b);
}

@Edge(source = b1, target = b2, label = "cites")
pattern bookCitation(b1 : Book, b2 : Book) {
	Book.citations(b1, b2);
}

/*
 * Writer w1 is influenced by w2, since he wrote some book
 * that (indirectly or directly) references one of w2's works.
 */
@Edge(source = w1, target = w2, label = "influencedBy")
@Format(lineColor = "#ff0000")
pattern influencedBy(w1: Writer, w2: Writer) {
	Book.writers(b1,w1);
	Book.writers(b2,w2);
	find allReferencesTo(b2,b1);
}


// ************* numbers **********

pattern numberOfCitations(B1 : Book, N) {
	N == count find allBookCitations(B1, _B2);
}

pattern numberOfBooksOfWriter(W : Writer, N) {
	N == count find bookOfWriter(W, _B);
}

//@Item(item = B, label = "$B.title$ [$N2$]")
// TODO: this seems to introduce a weird bug
pattern numberOfWriters(B : Book, N2) {
	N == count find writerOfBook(B, _W);
	N2 == eval(N+1-1);
}

pattern writerOfBook(B : Book, W : Writer) {
	Book.writers(B, W);
}

@Edge(source = w, target = b, label = "author")
pattern bookOfWriter(w : Writer, b : Book) {
	Writer.books(w, b);
}

